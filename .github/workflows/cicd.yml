# .github/workflows/cicd.yml

name: CI & Release

on:
  push:
    branches:
      - '**'
  release:
    types: [created]

env:
  REGISTRY: ghcr.io
  CONTAINER_IMAGE_NAME: ${{ github.repository }}
  HELM_CHART_REPOSITORY_NAME: vault-secrets-exporter-helm

jobs:
  build_and_validate:
    name: Build and Validate
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Build Go application
        run: go build -v ./...
        working-directory: ./cmd/exporter

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}:test

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.13.2'

      - name: Lint and package Helm chart
        run: helm lint ./charts/vault-secrets-exporter && helm package ./charts/vault-secrets-exporter

  release:
    name: Create Release Artifacts
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Compile release binaries
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o "vault-secrets-exporter-${{ matrix.goos }}-${{ matrix.goarch }}" ./cmd/exporter

      - name: Upload Binaries to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: vault-secrets-exporter-*
          file_glob: true
          tag: ${{ github.ref }}

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.13.2'
      
      - name: Prepare Helm OCI repository path
        run: echo "OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        shell: bash

      - name: Package and Push Helm chart to GHCR
        run: |
          CHART_VERSION=$(echo "${{ github.ref_name }}" | sed 's/v//')
          helm package ./charts/vault-secrets-exporter --version "$CHART_VERSION" --app-version "$CHART_VERSION"
          
          # The chart will be available at oci://${{ env.REGISTRY }}/OWNER/vault-secrets-exporter-helm
          helm push vault-secrets-exporter-"$CHART_VERSION".tgz oci://${{ env.REGISTRY }}/${{ env.OWNER_LOWERCASE }}/${{ env.HELM_CHART_REPOSITORY_NAME }}

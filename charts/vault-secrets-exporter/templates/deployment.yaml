# templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vault-secrets-exporter.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "vault-secrets-exporter.serviceAccountName" . }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9102
              protocol: TCP
          env:
            - name: VAULT_ADDR
              value: {{ .Values.vault.address | quote }}
            - name: KV_MOUNT_PATH
              value: {{ .Values.vault.kvMountPath | quote }}
            {{- if .Values.vault.namespace }}
            - name: VAULT_NAMESPACE
              value: {{ .Values.vault.namespace | quote }}
            {{- end }}

            # --- NEW: Conditional Authentication ENVs ---
            {{- if eq .Values.auth.method "token" }}
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.token.existingSecretName }}
                  key: token
            {{- else if eq .Values.auth.method "approle" }}
            - name: VAULT_ROLE_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.approle.existingSecretName }}
                  key: role_id
            - name: VAULT_SECRET_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.approle.existingSecretName }}
                  key: secret_id
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

